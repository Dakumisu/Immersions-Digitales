{"id":"node_modules/glslify/index.js","dependencies":[{"name":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\package.json","includedInParent":true,"mtime":1605129573467},{"name":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\package.json","includedInParent":true,"mtime":1605112644055},{"name":"glslify-bundle","loc":{"line":1,"column":28},"parent":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\index.js","resolved":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify-bundle\\index.js"},{"name":"glslify-deps/sync","loc":{"line":2,"column":28},"parent":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\index.js","resolved":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify-deps\\sync.js"},{"name":"resolve","loc":{"line":3,"column":28},"parent":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\index.js","resolved":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\resolve\\index.js"},{"name":"path","loc":{"line":4,"column":28},"parent":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\index.js","resolved":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\path-browserify\\index.js"},{"name":"xtend","loc":{"line":5,"column":28},"parent":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\index.js","resolved":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\xtend\\immutable.js"},{"name":"stack-trace","loc":{"line":6,"column":28},"parent":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\index.js","resolved":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\stack-trace\\lib\\stack-trace.js"},{"name":"./transform.js","loc":{"line":14,"column":19},"parent":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\index.js","resolved":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\transform.js"},{"name":"process","parent":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\glslify\\index.js","resolved":"C:\\Users\\Alex\\Desktop\\MMI\\PTUT\\site ID\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar glslifyBundle = require('glslify-bundle')\nvar glslifyDeps   = require('glslify-deps/sync')\nvar nodeResolve   = require('resolve')\nvar path          = require('path')\nvar extend        = require('xtend')\nvar stackTrace    = require('stack-trace')\n\nmodule.exports = function(arg, opts) {\n  var isShaderString = /(void\\s+main\\s?\\(.*\\)|\\n)/.test(arg)\n  if (Array.isArray(arg)) { // template string\n    return iface().tag.apply(null, arguments)\n  } else if (typeof arg === 'string' && !isShaderString && opts && opts._flags) {\n    // browserify transform\n    return require('./transform.js').apply(this, arguments)\n  } else if (typeof arg === 'string' && isShaderString) { // source string\n    return iface().compile(arg, opts)\n  } else if (typeof arg === 'string') { // source file\n    return iface().file(arg, opts)\n  } else throw new Error('unhandled argument type: ' + typeof arg)\n}\nmodule.exports.compile = function(src, opts) {\n  return iface().compile(src, opts)\n}\nmodule.exports.file = function(file, opts) {\n  return iface().file(file, opts)\n}\n\nfunction iface () {\n  try { var basedir = path.dirname(stackTrace.get()[2].getFileName()) }\n  catch (err) { basedir = process.cwd() }\n  var posts = []\n  return { tag: tag, compile: compile, file: file }\n\n  function tag(strings) {\n    if (typeof strings === 'string') strings = [strings]\n    var exprs = [].slice.call(arguments, 1)\n    var parts = []\n    for (var i = 0; i < strings.length-1; i++) {\n      parts.push(strings[i], exprs[i] || '')\n    }\n    parts.push(strings[i])\n    return compile(parts.join(''))\n  }\n  function compile(src, opts) {\n    if (!opts) opts = {}\n    var depper = gdeps(opts)\n    var deps = depper.inline(src, opts.basedir || basedir)\n    return bundle(deps)\n  }\n  function file(filename, opts) {\n    if (!opts) opts = {}\n    var depper = gdeps(opts)\n    var deps = depper.add(path.resolve(opts.basedir || basedir, filename))\n    return bundle(deps)\n  }\n  function gdeps (opts) {\n    if (!opts) opts = {}\n    var depper = glslifyDeps({ cwd: opts.basedir || basedir })\n    var transforms = opts.transform || []\n    transforms = Array.isArray(transforms) ? transforms : [transforms]\n    transforms.forEach(function(transform) {\n      transform = Array.isArray(transform) ? transform : [transform]\n      var name = transform[0]\n      var opts = transform[1] || {}\n      if (opts.post) {\n        posts.push({ name: name, opts: opts })\n      } else {\n        depper.transform(name, opts)\n      }\n    })\n    return depper\n  }\n  function bundle (deps) {\n    var source = glslifyBundle(deps)\n    posts.forEach(function (tr) {\n      if (typeof tr.name === 'function') {\n        var transform = tr.name\n      } else {\n        var target = nodeResolve.sync(tr.name, { basedir: basedir })\n        var transform = require(target)\n      }\n      var src = transform((deps && deps[0] && deps[0].file) || null, source, { post: true })\n      if (src) source = src\n    })\n    return source\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/glslify/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/glslify/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}}],"sources":{"node_modules/glslify/index.js":"var glslifyBundle = require('glslify-bundle')\nvar glslifyDeps   = require('glslify-deps/sync')\nvar nodeResolve   = require('resolve')\nvar path          = require('path')\nvar extend        = require('xtend')\nvar stackTrace    = require('stack-trace')\n\nmodule.exports = function(arg, opts) {\n  var isShaderString = /(void\\s+main\\s?\\(.*\\)|\\n)/.test(arg)\n  if (Array.isArray(arg)) { // template string\n    return iface().tag.apply(null, arguments)\n  } else if (typeof arg === 'string' && !isShaderString && opts && opts._flags) {\n    // browserify transform\n    return require('./transform.js').apply(this, arguments)\n  } else if (typeof arg === 'string' && isShaderString) { // source string\n    return iface().compile(arg, opts)\n  } else if (typeof arg === 'string') { // source file\n    return iface().file(arg, opts)\n  } else throw new Error('unhandled argument type: ' + typeof arg)\n}\nmodule.exports.compile = function(src, opts) {\n  return iface().compile(src, opts)\n}\nmodule.exports.file = function(file, opts) {\n  return iface().file(file, opts)\n}\n\nfunction iface () {\n  try { var basedir = path.dirname(stackTrace.get()[2].getFileName()) }\n  catch (err) { basedir = process.cwd() }\n  var posts = []\n  return { tag: tag, compile: compile, file: file }\n\n  function tag(strings) {\n    if (typeof strings === 'string') strings = [strings]\n    var exprs = [].slice.call(arguments, 1)\n    var parts = []\n    for (var i = 0; i < strings.length-1; i++) {\n      parts.push(strings[i], exprs[i] || '')\n    }\n    parts.push(strings[i])\n    return compile(parts.join(''))\n  }\n  function compile(src, opts) {\n    if (!opts) opts = {}\n    var depper = gdeps(opts)\n    var deps = depper.inline(src, opts.basedir || basedir)\n    return bundle(deps)\n  }\n  function file(filename, opts) {\n    if (!opts) opts = {}\n    var depper = gdeps(opts)\n    var deps = depper.add(path.resolve(opts.basedir || basedir, filename))\n    return bundle(deps)\n  }\n  function gdeps (opts) {\n    if (!opts) opts = {}\n    var depper = glslifyDeps({ cwd: opts.basedir || basedir })\n    var transforms = opts.transform || []\n    transforms = Array.isArray(transforms) ? transforms : [transforms]\n    transforms.forEach(function(transform) {\n      transform = Array.isArray(transform) ? transform : [transform]\n      var name = transform[0]\n      var opts = transform[1] || {}\n      if (opts.post) {\n        posts.push({ name: name, opts: opts })\n      } else {\n        depper.transform(name, opts)\n      }\n    })\n    return depper\n  }\n  function bundle (deps) {\n    var source = glslifyBundle(deps)\n    posts.forEach(function (tr) {\n      if (typeof tr.name === 'function') {\n        var transform = tr.name\n      } else {\n        var target = nodeResolve.sync(tr.name, { basedir: basedir })\n        var transform = require(target)\n      }\n      var src = transform((deps && deps[0] && deps[0].file) || null, source, { post: true })\n      if (src) source = src\n    })\n    return source\n  }\n}\n"},"lineCount":89}},"error":null,"hash":"af66a9d7e8a3916744c0159b8f6d23b4","cacheData":{"env":{}}}